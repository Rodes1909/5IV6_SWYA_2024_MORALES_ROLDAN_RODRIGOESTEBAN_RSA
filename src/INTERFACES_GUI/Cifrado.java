/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package INTERFACES_GUI;
import java.awt.Dimension;
import java.math.BigInteger;
import java.util.*;
import java.io.*;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;



public class Cifrado extends javax.swing.JFrame {
    int tamprimo;
    private BigInteger p, q;
    private BigInteger fi;
    private BigInteger n, e, d;
    private int llave1;
    private String res;
    public Cifrado() {
        initComponents();
    }

    /**
     * Creates new form Cifrado
     */
    public Cifrado(int tamprimo) {
        this.tamprimo = tamprimo;
    }
    
    public void generarPrimos() {
        p = new BigInteger(tamprimo, 10, new Random());
        do
            q = new BigInteger(tamprimo, 10, new Random());
        while (q.compareTo(p) == 0);
    }

    public void generarClaves() {
        n = p.multiply(q);
        fi = p.subtract(BigInteger.valueOf(1)).multiply(q.subtract(BigInteger.valueOf(1)));

        do
            e = new BigInteger(2 * tamprimo, new Random());
        while (e.compareTo(fi) != 1 || e.gcd(fi).compareTo(BigInteger.valueOf(1)) != 0);

        d = e.modInverse(fi);
    }

    public BigInteger[] cifrar(String mensaje) {
        byte[] temp = mensaje.getBytes();
        BigInteger[] cifrado = new BigInteger[temp.length];

        for (int i = 0; i < temp.length; ++i) {
            cifrado[i] = new BigInteger(String.valueOf(temp[i]));
        }

        for (int i = 0; i < cifrado.length; ++i) {
            cifrado[i] = cifrado[i].modPow(e, n);
        }

        return cifrado;

    }

    public String descifrar(BigInteger[] cifrado) {
        BigInteger[] descifrado = new BigInteger[cifrado.length];

        for (int i = 0; i < descifrado.length; ++i) {
            descifrado[i] = cifrado[i].modPow(d, n);
        }

        byte[] temp = new byte[descifrado.length];

        for (int i = 0; i < temp.length; ++i) {
            temp[i] = descifrado[i].byteValue();
        }

        return new String(temp);    
    }

    public void setLLave(int llave, String txt) {
        this.llave1 = llave;
        this.res = txt;
        Cifrado rsa = new Cifrado(llave1);
        rsa.generarPrimos();
        rsa.generarClaves();
        BigInteger[] cifrado = rsa.cifrar(res);
        String mensajeDescifrado = rsa.descifrar(cifrado);
        cifrado1.setText(Arrays.toString(cifrado));
        cifrado1.setEditable(false);
        descifrado1.setText(mensajeDescifrado);
        descifrado1.setEditable(false);
        
        BigInteger[] cifradoConPrivada = rsa.cifrarConLlavePrivada(res);
        String mensajeDescifradoConPublica = rsa.descifrarConLlavePublica(cifradoConPrivada);

        cifrado2.setText(Arrays.toString(cifradoConPrivada));
        cifrado2.setEditable(false);
        descifrado2.setText(mensajeDescifradoConPublica);
        descifrado2.setEditable(false);
    }
    
    public BigInteger[] cifrarConLlavePrivada(String mensaje) {
        byte[] temp = mensaje.getBytes();
        BigInteger[] cifrado = new BigInteger[temp.length];

        for (int i = 0; i < temp.length; ++i) {
            cifrado[i] = new BigInteger(String.valueOf(temp[i]));
        }

        for (int i = 0; i < cifrado.length; ++i) {
            cifrado[i] = cifrado[i].modPow(d, n);
        }

        return cifrado;
    }

    public String descifrarConLlavePublica(BigInteger[] cifrado) {
        BigInteger[] descifrado = new BigInteger[cifrado.length];

        for (int i = 0; i < descifrado.length; ++i) {
            descifrado[i] = cifrado[i].modPow(e, n);
        }

        byte[] temp = new byte[descifrado.length];

        for (int i = 0; i < temp.length; ++i) {
            temp[i] = descifrado[i].byteValue();
        }

        return new String(temp);  
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Mensaje5 = new javax.swing.JLabel();
        Mensaje6 = new javax.swing.JLabel();
        Mensaje7 = new javax.swing.JLabel();
        Mensaje8 = new javax.swing.JLabel();
        Mensaje3 = new javax.swing.JLabel();
        Mensaje4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cifrado1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        descifrado1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        cifrado2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        descifrado2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        Mensaje5.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        Mensaje5.setText("Mensaje Cifrado en RSA: ");

        Mensaje6.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        Mensaje6.setText("Mensaje Descifrado: ");

        Mensaje7.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        Mensaje7.setText("Mensaje Cifrado en RSA: ");

        Mensaje8.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 18)); // NOI18N
        Mensaje8.setText("Mensaje Descifrado: ");

        Mensaje3.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        Mensaje3.setText("Resultado con Clave PÃºblica");

        Mensaje4.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        Mensaje4.setText("Resultado con Clave Privada");

        cifrado1.setColumns(20);
        cifrado1.setRows(5);
        jScrollPane1.setViewportView(cifrado1);

        descifrado1.setColumns(20);
        descifrado1.setRows(5);
        jScrollPane2.setViewportView(descifrado1);

        cifrado2.setColumns(20);
        cifrado2.setRows(5);
        jScrollPane3.setViewportView(cifrado2);

        descifrado2.setColumns(20);
        descifrado2.setRows(5);
        jScrollPane4.setViewportView(descifrado2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Mensaje3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Mensaje5))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Mensaje8)
                            .addComponent(Mensaje7)
                            .addComponent(Mensaje4)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addGap(0, 21, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Mensaje6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mensaje3)
                    .addComponent(Mensaje4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mensaje5)
                    .addComponent(Mensaje7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mensaje6)
                    .addComponent(Mensaje8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cifrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cifrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cifrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cifrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cifrado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Mensaje3;
    private javax.swing.JLabel Mensaje4;
    private javax.swing.JLabel Mensaje5;
    private javax.swing.JLabel Mensaje6;
    private javax.swing.JLabel Mensaje7;
    private javax.swing.JLabel Mensaje8;
    private javax.swing.JTextArea cifrado1;
    private javax.swing.JTextArea cifrado2;
    private javax.swing.JTextArea descifrado1;
    private javax.swing.JTextArea descifrado2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
